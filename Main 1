import 'package:flutter/material.dart';
import 'package:sqflite/sqflite.dart' as sql;

void main() => runApp(LoginScreen());

class LoginScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: LoginHome(),
      theme: ThemeData(
        primarySwatch: Colors.amber,
      ),
    );
  }
}

class LoginHome extends StatefulWidget {
  @override
  State<LoginHome> createState() => _LoginHomeState();
}

class _LoginHomeState extends State<LoginHome> {
  var usernameController = new TextEditingController();
  var passwordController = new TextEditingController();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('LOGIN SCREEN'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(20.0),
        child: Card(
          child: SingleChildScrollView(
            scrollDirection: Axis.vertical,
            child: Padding(
              padding: const EdgeInsets.all(20.0),
              child: Column(
                children: [
                  CircleAvatar(
                    radius: 70.0,
                    backgroundImage: NetworkImage('https://i.gifer.com/7Ne0.gif'),
                  ),
                  SizedBox(
                    height: 20.0,
                  ),
                  TextField(
                    decoration: const InputDecoration(
                        border: OutlineInputBorder(),
                        labelText: "Username",
                        icon: const Padding(
                          padding: const EdgeInsets.only(top: 15.0),
                          child: const Icon(Icons.account_circle_rounded),
                        )),
                    controller: usernameController,
                    style: TextStyle(
                      fontSize: 24.0,
                    ),
                  ),
                  SizedBox(
                    height: 20.0,
                  ),
                  TextField(
                    decoration: const InputDecoration(
                        border: OutlineInputBorder(),
                        labelText: "Password",
                        icon: const Padding(
                          padding: const EdgeInsets.only(top: 15.0),
                          child: const Icon(Icons.lock),
                        )),
                    obscureText: true,
                    controller: passwordController,
                    style: TextStyle(
                      fontSize: 24.0,
                    ),
                  ),
                  SizedBox(
                    height: 20.0,
                  ),
                  ElevatedButton(
                      onPressed: () {
                        if (usernameController.text == '') {
                          ScaffoldMessenger.of(context).showSnackBar(
                            SnackBar(
                              content: Text('Username is empty!'),
                              backgroundColor: Colors.orange,
                            ),
                          );
                        } else if (passwordController.text == '') {
                          ScaffoldMessenger.of(context).showSnackBar(
                            SnackBar(
                              content: Text('Password is Empty'),
                              backgroundColor: Colors.orange,
                            ),
                          );
                        } else {
                          Navigator.of(context).push(MaterialPageRoute(
                              builder: (BuildContext context) => Dashboard()));
                        }
                      },
                      child: Text('LOGIN')),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      Text('No Account?'),
                      TextButton(
                          onPressed: () {
                            Navigator.of(context).push(MaterialPageRoute(
                                builder: (BuildContext context) =>
                                    SignupHome()));
                          },
                          child: Text('Sign up'))
                    ],
                  ),
                ],
              ),
            ),
          ),
        ),
      ),
    );
  }
}

class Dashboard extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: DashboardHome(),
      theme: ThemeData(
        primarySwatch: Colors.amber,
      ),
    );
  }
}

class DashboardHome extends StatefulWidget {
  @override
  State<DashboardHome> createState() => _DashboardHomeState();
}

class _DashboardHomeState extends State<DashboardHome> {
  var fullnameController = new TextEditingController();
  var nicknamecontroller = new TextEditingController();
  void addUser(BuildContext context) {
    showModalBottomSheet(
        shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.vertical(top: Radius.circular(25.0))),
        context: context,
        isScrollControlled: true,
        builder: (context) {
          return Container(
            color: Colors.white,
            height: MediaQuery.of(context).size.height / 2,
            child: SafeArea(
              child: Padding(
                padding: const EdgeInsets.symmetric(horizontal: 18),
                child: SingleChildScrollView(
                  scrollDirection: Axis.vertical,
                  child: Column(
                    mainAxisSize: MainAxisSize.min,
                    children: <Widget>[
                      SizedBox(
                        height: 16.0,
                      ),
                      CircleAvatar(
                        radius: 50.0,
                      ),
                      SizedBox(
                        height: 16.0,
                      ),
                      TextField(
                        decoration: const InputDecoration(
                            border: OutlineInputBorder(),
                            labelText: "Fullname",
                            hintText: 'Enter Fullname ',
                            icon: const Padding(
                              padding: const EdgeInsets.only(top: 15.0),
                              child: const Icon(Icons.account_circle_rounded),
                            )),
                        controller: fullnameController,
                        style: TextStyle(
                          fontSize: 24.0,
                        ),
                      ),
                      SizedBox(
                        height: 10.0,
                      ),
                      TextField(
                        decoration: const InputDecoration(
                            border: OutlineInputBorder(),
                            labelText: "Nickname",
                            hintText: 'Enter Nickname ',
                            icon: const Padding(
                              padding: const EdgeInsets.only(top: 15.0),
                              child: const Icon(Icons.account_circle_rounded),
                            )),
                        controller: nicknamecontroller,
                        style: TextStyle(
                          fontSize: 24.0,
                        ),
                      ),
                      SizedBox(
                        height: 10.0,
                      ),
                      Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            ElevatedButton(
                              child: Text('Cancel'),
                              onPressed: () {
                                Navigator.of(context).pop();
                              },
                            ),
                            SizedBox(
                              width: 15.0,
                            ),
                            ElevatedButton(
                              child: Text('Add User'),
                              onPressed: () {},
                            ),
                          ])
                    ],
                  ),
                ),
              ),
            ),
          );
        });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(
          title: Text('DASHBOARD'),
        ),
        drawer: Drawer(
            child: Column(
          children: [
            CircleAvatar(
              radius: 35.0,
            ),
            InkWell(
              onTap: () {
                Navigator.of(context).push(MaterialPageRoute(
                    builder: (BuildContext context) => User()));
                //Add navigator here to Navigate to your Users Class
              },
              child: ListTile(
                  leading: Icon(Icons.verified_user),
                  title: Text('List of Users')),
            ),
          ],
        )),
        body: Card(
          child: SingleChildScrollView(
            padding: const EdgeInsets.all(20.0),
            scrollDirection: Axis.vertical,
            child: Padding(
              padding: const EdgeInsets.all(20.0),
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  CircleAvatar(
                    backgroundImage: NetworkImage('https://i.gifer.com/7Ne0.gif'),
                    radius: 50.0,
                  ),
                  Center(
                    child: Text(''),
                  ),
                  ElevatedButton(
                      onPressed: () {
                        Navigator.of(context).push(MaterialPageRoute(
                            builder: (BuildContext context) => LoginScreen()));
                      },
                      child: Text('Nichol Brian B. Galano')),
                  SizedBox(
                    height: 20.0,
                  ),
                  SizedBox(
                    height: 20.0,
                  ),
                  ElevatedButton(
                      onPressed: () {
                        showDialog(
                            context: context,
                            barrierDismissible: false,
                            builder: (BuildContext context) {
                              return StatefulBuilder(
                                  builder: (context, setState) {
                                return AlertDialog(
                                  title: Text('Warning!'),
                                  content: SingleChildScrollView(
                                    child: ListBody(
                                      children: [
                                        Center(
                                          child: Text('Are you sure?'),
                                        ),
                                      ],
                                    ),
                                  ),
                                  actions: [
                                    TextButton(
                                      child: Text('Close'),
                                      onPressed: () {
                                        Navigator.of(context).pop();
                                      },
                                    ),
                                    TextButton(
                                      child: Text('Logout'),
                                      onPressed: () {
                                        Navigator.of(context).push(
                                            MaterialPageRoute(
                                                builder:
                                                    (BuildContext context) =>
                                                        LoginHome()));
                                      },
                                    ),
                                  ],
                                );
                              });
                            });
                      },
                      child: Text('Log Out')),
                ],
              ),
            ),
          ),
        ),
        floatingActionButton: FloatingActionButton(
          onPressed: () {
            addUser(context);
          },
          child: Icon(Icons.add),
        ));
  }
}

class Signup extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      theme: ThemeData(),
      home: SignupHome(),
    );
  }
}

class SignupHome extends StatelessWidget {
  var firstnamecontroller = new TextEditingController();
  var middlenamecontroller = new TextEditingController();
  var lastnamecontroller = new TextEditingController();
  var birthdaycontroller = new TextEditingController();
  var coursecontroller = new TextEditingController();
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('SIGN UP')),
      body: Padding(
          padding: const EdgeInsets.all(50.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              SizedBox(
                height: 20.0,
              ),
              TextField(
                decoration: const InputDecoration(
                  border: OutlineInputBorder(),
                  labelText: "Firstname",
                  hintText: 'Enter Firstname ',
                ),
                controller: firstnamecontroller,
              ),
              SizedBox(
                height: 16.0,
              ),
              TextField(
                decoration: const InputDecoration(
                  border: OutlineInputBorder(),
                  labelText: "Middlename",
                  hintText: 'Enter Middlename ',
                ),
                controller: middlenamecontroller,
              ),
              SizedBox(
                height: 16.0,
              ),
              TextField(
                decoration: const InputDecoration(
                  border: OutlineInputBorder(),
                  labelText: "Lastname",
                  hintText: 'Enter Lastname ',
                ),
                controller: lastnamecontroller,
              ),
              SizedBox(
                height: 16.0,
              ),
              TextField(
                decoration: const InputDecoration(
                  border: OutlineInputBorder(),
                  labelText: "Birthday",
                  hintText: 'Enter Birthday ',
                ),
                controller: birthdaycontroller,
              ),
              SizedBox(
                height: 10.0,
              ),
              TextField(
                decoration: const InputDecoration(
                  border: OutlineInputBorder(),
                  labelText: "Course",
                  hintText: 'Enter Course ',
                ),
                controller: coursecontroller,
              ),
              SizedBox(
                height: 15.0,
              ),
              Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  ElevatedButton(
                    onPressed: () {
                      Navigator.of(context).push(MaterialPageRoute(
                          builder: (BuildContext context) => LoginHome()));
                    },
                    child: Text("Cancel"),
                  ),
                  SizedBox(
                    width: 10.0,
                  ),
                  ElevatedButton(
                    onPressed: () {
                      if (firstnamecontroller.text == '') {
                        ScaffoldMessenger.of(context).showSnackBar(
                          SnackBar(
                            content: Text('Firstname is empty!'),
                            backgroundColor: Colors.orange,
                          ),
                        );
                      } else if (middlenamecontroller.text == '') {
                        ScaffoldMessenger.of(context).showSnackBar(
                          SnackBar(
                            content: Text('Middlename is empty!'),
                            backgroundColor: Colors.orange,
                          ),
                        );
                      } else if (lastnamecontroller.text == '') {
                        ScaffoldMessenger.of(context).showSnackBar(
                          SnackBar(
                            content: Text('Lastname is empty!'),
                            backgroundColor: Colors.orange,
                          ),
                        );
                      } else if (birthdaycontroller.text == '') {
                        ScaffoldMessenger.of(context).showSnackBar(
                          SnackBar(
                            content: Text('Birthday is empty!'),
                            backgroundColor: Colors.orange,
                          ),
                        );
                      } else if (coursecontroller.text == '') {
                        ScaffoldMessenger.of(context).showSnackBar(
                          SnackBar(
                            content: Text('Course is empty!'),
                            backgroundColor: Colors.orange,
                          ),
                        );
                      }
                    },
                    child: Text("Sign up"),
                  ),
                ],
              ),
            ],
          )),
    );
  }
}

class User extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: StudentList(),
      theme: ThemeData(
        primarySwatch: Colors.amber,
      ),
    );
  }
}

class StudentList extends StatefulWidget {
  @override
  State<
